{"version":3,"sources":["components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","api/users.ts","components/TodoList/TodoList.tsx","api/todos.ts","App.tsx","index.tsx"],"names":["UserInfo","user","name","email","className","href","TodoInfo","todo","id","title","completed","userId","classNames","username","TodoList","users","todos","preparedTodos","usersFromServer","map","find","App","useState","todosFromServer","setTodos","setTitle","selectUser","setSelectUser","submit","setSubmit","largestId","Math","max","action","method","onSubmit","e","preventDefault","newTodo","addTodo","htmlFor","type","placeholder","value","onChange","currentTarget","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a9a4bd48.chunk.js","sourcesContent":["import { User } from '../../react-app-env';\n\ntype Props = {\n  user: User;\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  const { name, email } = user;\n\n  return (\n    <a className=\"UserInfo\" href={`mailto:${email}`}>\n      {name}\n    </a>\n  );\n};\n","import classNames from 'classnames';\nimport { UserInfo } from '../UserInfo';\nimport { FullTodoInfo } from '../../react-app-env.d';\n\ntype Props = {\n  todo: FullTodoInfo,\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  const {\n    id,\n    title,\n    completed,\n    user,\n    userId,\n  } = todo;\n\n  return (\n    <article\n      data-id={id}\n      className={classNames(\n        'TodoInfo',\n        {\n          'TodoInfo--completed': completed,\n        },\n      )}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {title}\n      </h2>\n\n      {\n        user && (\n          <UserInfo user={user} key={userId} />\n        )\n      }\n    </article>\n  );\n};\n","export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import { TodoInfo } from '../TodoInfo';\n\nimport usersFromServer from '../../api/users';\n\nimport {\n  Todo,\n  User,\n  FullTodoInfo,\n} from '../../react-app-env';\n\ntype Props = {\n  todos: Todo[]\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  const prepareTodos = (users: User[], todosArr: Todo[]): FullTodoInfo[] => {\n    return todosArr.map(todo => ({\n      ...todo,\n      user: users.find(user => user.id === todo.userId),\n    }));\n  };\n\n  const preparedTodos = prepareTodos(\n    usersFromServer,\n    todos,\n  );\n\n  return (\n    <section className=\"TodoList\">\n      {\n        preparedTodos.map(todo => (\n          <TodoInfo todo={todo} key={todo.id} />\n        ))\n      }\n    </section>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import './App.scss';\nimport { useState } from 'react';\nimport { TodoList } from './components/TodoList';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\n\nimport { Todo } from './react-app-env';\n\nexport const App = () => {\n  const [todos, setTodos] = useState(todosFromServer);\n  const [title, setTitle] = useState('');\n  const [selectUser, setSelectUser] = useState(0);\n  const [submit, setSubmit] = useState(false);\n\n  const largestId = Math.max(...todos.map(todo => todo.id));\n\n  const addTodo = () => {\n    const newTodo: Todo = {\n      id: largestId + 1,\n      title,\n      completed: false,\n      userId: +selectUser,\n    };\n\n    setTodos([...todos, newTodo]);\n  };\n\n  const handleSubmit = (e: React.MouseEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    setSubmit(true);\n\n    if (title && selectUser) {\n      addTodo();\n      setSubmit(false);\n      setTitle('');\n      setSelectUser(0);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/users\"\n        method=\"POST\"\n        onSubmit={handleSubmit}\n      >\n        <div className=\"field\">\n          <label htmlFor=\"title\">\n            Title:\n          </label>\n\n          <input\n            id=\"title\"\n            type=\"text\"\n            data-cy=\"titleInput\"\n            placeholder=\"Enter a title\"\n            value={title}\n            onChange={(e) => setTitle(e.currentTarget.value)}\n          />\n          {\n            submit && !title\n            && (<span className=\"error\">Please enter a title</span>)\n          }\n        </div>\n\n        <div className=\"field\">\n          <label htmlFor=\"selectUser\">\n            User:\n          </label>\n\n          <select\n            id=\"selectUser\"\n            data-cy=\"userSelect\"\n            value={selectUser}\n            onChange={(e) => setSelectUser(+e.currentTarget.value)}\n          >\n            <option value=\"0\" disabled>Choose a user</option>\n\n            {usersFromServer.map(user => (\n              <option key={user.id} value={user.id}>\n                {user.name}\n              </option>\n            ))}\n\n          </select>\n          {\n            submit && !selectUser\n            && (<span className=\"error\">Please choose a user</span>)\n          }\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}